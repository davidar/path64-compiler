#! /bin/sh

set -e

curdir=`pwd`
base=$(cd $(dirname $0) && pwd)
src=$base

while [ "${1#-}" != "$1" ]; do
    opt=$1
    shift
    case $opt in
        --prefix=*) prefix=${opt#*=} ;;
        --src=*)    src=${opt#*=}    ;;
        -t)         target=$1; shift ;;
        -u)         update=y         ;;
        -n)         run=echo         ;;
        -j*)        make_j=$opt      ;;
    esac
done

if [ "$update" = y ]; then
    if [ -d $src ]; then
        (cd $src && git pull)
    else
        git clone git://github.com/path64/compiler.git $src
    fi
fi

cross=${target:+${target}-}
machine=$(${cross}gcc -dumpmachine)
gcc=${machine}-gcc
prefix=${prefix:-/usr/local/path64/$machine}

version=$(cd $src && git describe --tags --match '[0-9]*')
oldversion=$(ls $prefix/lib 2>/dev/null || echo none)

[ "$update" = y ] && [ "$version" = "$oldversion" ] && exit

if [ -z "$build" ]; then
    build=$curdir/build
fi

$run mkdir -p $build
$run cd $build

case $machine in
    mips64*)        targets='mips_32=-mabi=n32 mips_64=-mabi=64' ;;
    x86*64*|amd64*) targets='x86_64=-m64 x86_32=-m32'            ;;
    x86*|i?86*)     targets='x86_32=-m32'                        ;;
    *)              echo "Unsupported machine $machine"; exit 1  ;;
esac

for t in $targets; do
    name=${t%%=*}
    flags=${t#$name}
    flags=${flags#=}
    path64_targets="${path64_targets:+${path64_targets};}$name"
    libgcc=$($gcc $flags -print-libgcc-file-name)
    crt=$($gcc $flags -print-file-name=crt1.o)
    gcclib=$(realpath ${libgcc%/*})
    gcccrt=$(realpath ${crt%/*})
    ld_so=$($gcc $flags --help -v 2>&1 >/dev/null |
            awk '/-dynamic-linker/ { match($0, "-dynamic-linker +[^ ]+");
                                     print substr($0, RSTART+16, RLENGTH-16) }')
    PATH64_DEFS="$PATH64_DEFS
      -DPSC_CRTBEGIN_PATH_${name}=${gcclib}
      -DPSC_LIBSUPCPP_PATH_${name}=${gcclib}
      -DPSC_LIBSTDCPP_PATH_${name}=${gcclib}
      -DPSC_LIBGCC_PATH_${name}=${gcclib}
      -DPSC_LIBGCC_EH_PATH_${name}=${gcclib}
      -DPSC_LIBGCC_S_PATH_${name}=${gcclib}
    "
done

if [ -n "${target}" ]; then
    psc_target="-DPSC_TARGET=${machine}"
fi

$run cmake -DCMAKE_INSTALL_PREFIX=$prefix                    \
           -DCMAKE_BUILD_TYPE=Debug                          \
           -DPATH64_ENABLE_PSCRUNTIME=OFF                    \
           ${psc_target}                                     \
           -DPATH64_ENABLE_TARGETS="$path64_targets"         \
           ${PATH64_DEFS}                                    \
           -DPATH64_ENABLE_PROFILING=OFF                     \
           -DPATH64_ENABLE_FORTRAN=OFF                       \
           -DPSC_FULL_VERSION=$version                       \
           $src

makefile=$curdir/Makefile
echo "all:\n\tcd build; \${MAKE}\n" > $makefile
echo "install:\n\tcd build; \${MAKE} install" >> $makefile
echo "test:\n\tcd build; \${MAKE} test" >> $makefile

